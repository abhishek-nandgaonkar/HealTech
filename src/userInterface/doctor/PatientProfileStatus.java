/*
 * Copyright (C) 2014 Abhishek
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package userInterface.doctor;

import baseClasses.enterprise.CityEnterprise;
import baseClasses.enterprise.Enterprise;
import baseClasses.network.Network;
import baseClasses.organization.Organization;
import baseClasses.patient.Patient;
import baseClasses.userAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import workQueue.LabWorkRequest;
import workQueue.WorkQueue;
import workQueue.WorkRequest;

/**
 *
 * @author Abhishek
 */
public class PatientProfileStatus extends javax.swing.JPanel {

    /**
     * Creates new form PatientProfileStatus
     */
    private WorkQueue workQueue;
    Network interantionalNetwork;
    CityEnterprise inCityEnterprise;
    Organization inOrganization;
    UserAccount userAccount;
    JPanel userProcessContainer;
    Enterprise inEnterprise;
    Patient patient;
    
    public PatientProfileStatus(WorkQueue workQueue,Network interantionalNetwork, CityEnterprise inCityEnterprise, Organization inOrganization, UserAccount userAccount, JPanel userProcessContainer, Enterprise inEnterprise)
    {
        initComponents();
        this.workQueue = workQueue;
        populateWorkRequests();
        this.interantionalNetwork = interantionalNetwork;
        this.inCityEnterprise = inCityEnterprise;
        this.inOrganization = inOrganization;
        this.userAccount = userAccount;
        this.userProcessContainer = userProcessContainer;
        this.inEnterprise = inEnterprise;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLabRequestDetails = new javax.swing.JTable();
        btnProceedWithInteraction = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        lblName1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblName1.setForeground(new java.awt.Color(0, 153, 51));
        lblName1.setText("                                       Patient Profile Status");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/baseClasses/healtech logo.PNG"))); // NOI18N

        tblLabRequestDetails.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblLabRequestDetails.setForeground(new java.awt.Color(0, 153, 51));
        tblLabRequestDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lab Request ID", "Patient", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblLabRequestDetails);
        if (tblLabRequestDetails.getColumnModel().getColumnCount() > 0) {
            tblLabRequestDetails.getColumnModel().getColumn(0).setResizable(false);
            tblLabRequestDetails.getColumnModel().getColumn(1).setResizable(false);
            tblLabRequestDetails.getColumnModel().getColumn(2).setResizable(false);
        }

        btnProceedWithInteraction.setBackground(new java.awt.Color(255, 255, 255));
        btnProceedWithInteraction.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnProceedWithInteraction.setForeground(new java.awt.Color(0, 153, 0));
        btnProceedWithInteraction.setText("Proceed With Interaction");
        btnProceedWithInteraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProceedWithInteractionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 1398, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 813, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(493, 493, 493)
                .addComponent(btnProceedWithInteraction, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblName1)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(btnProceedWithInteraction)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProceedWithInteractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProceedWithInteractionActionPerformed
        // TODO add your handling code here:3
       int selectedRow = tblLabRequestDetails.getSelectedRow();
       patient = (Patient) tblLabRequestDetails.getValueAt(selectedRow, 1);
        
        userProcessContainer.setLayout(new CardLayout());
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add(new Interaction(interantionalNetwork, inCityEnterprise, inOrganization, userAccount, userProcessContainer, inEnterprise, patient));
        layout.next(userProcessContainer);
        
        
        
    }//GEN-LAST:event_btnProceedWithInteractionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProceedWithInteraction;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblName1;
    private javax.swing.JTable tblLabRequestDetails;
    // End of variables declaration//GEN-END:variables

    private void populateWorkRequests()
    {
        DefaultTableModel dtm = (DefaultTableModel)  tblLabRequestDetails.getModel();
        dtm.setRowCount(0);
        LabWorkRequest labWorkRequest;
        
        System.out.println("workqueue" + workQueue);
        for(WorkRequest workRequest: workQueue.getWorkRequestList())
        {
            if(workRequest.getClass() == LabWorkRequest.class)
            {
                labWorkRequest= (LabWorkRequest) workRequest;
                
                Object[] row = new Object[3];
                row[0] = labWorkRequest;
                row[1] = labWorkRequest.getPatient();
                row[2]= labWorkRequest.getStatus();
                        
                 dtm.addRow(row);
                
                
            }
        }
        
    }
}
