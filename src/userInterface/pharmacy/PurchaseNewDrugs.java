/*
 * Copyright (C) 2014 Abhishek
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package userInterface.pharmacy;

import baseClasses.Drug;
import baseClasses.enterprise.CityEnterprise;
import baseClasses.enterprise.CountryEnterprise;
import baseClasses.enterprise.Enterprise;
import baseClasses.enterprise.PharmaceuticalCompanyEnterprise;
import baseClasses.enterprise.StateEnterprise;
import baseClasses.medicine.Medicine;
import baseClasses.network.Network;
import baseClasses.organization.ManufacturingOrganization;
import baseClasses.organization.Organization;
import baseClasses.userAccount.UserAccount;
import javax.swing.table.DefaultTableModel;
import workQueue.MedicineOrderRequest;

/**
 *
 * @author Abhishek
 */
public class PurchaseNewDrugs extends javax.swing.JPanel {

    /**
     * Creates new form PurchaseNewDrugs
     */
    Network internationalNetwork;
    private UserAccount userAccount;
    
    public PurchaseNewDrugs(Network internationalNetwork, UserAccount userAccount) {
        initComponents();
        this.internationalNetwork = internationalNetwork;
        this.userAccount = userAccount;
        populateDrugCombo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnAddPharmaceuticalCompany = new javax.swing.JButton();
        lblSelectCountry6 = new javax.swing.JLabel();
        lblSelectCountry7 = new javax.swing.JLabel();
        cmbDrugList = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDrugs = new javax.swing.JTable();
        lblSelectCountry8 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        btnCalculateTotal = new javax.swing.JButton();
        txtQuantity = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        lblName1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblName1.setForeground(new java.awt.Color(0, 153, 51));
        lblName1.setText("Find Medicine By Drug Name");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/baseClasses/healtech logo.PNG"))); // NOI18N

        btnAddPharmaceuticalCompany.setBackground(new java.awt.Color(255, 255, 255));
        btnAddPharmaceuticalCompany.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAddPharmaceuticalCompany.setForeground(new java.awt.Color(0, 153, 0));
        btnAddPharmaceuticalCompany.setText("Place Order");
        btnAddPharmaceuticalCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPharmaceuticalCompanyActionPerformed(evt);
            }
        });

        lblSelectCountry6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSelectCountry6.setForeground(new java.awt.Color(0, 153, 51));
        lblSelectCountry6.setText("Select Drug: ");

        lblSelectCountry7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSelectCountry7.setForeground(new java.awt.Color(0, 153, 51));
        lblSelectCountry7.setText("Enter Quantity");

        cmbDrugList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbDrugList.setForeground(new java.awt.Color(0, 153, 51));
        cmbDrugList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDrugListActionPerformed(evt);
            }
        });

        tblDrugs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine", "Manufacturer", "Quantity Available", "Price per unit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDrugs);
        if (tblDrugs.getColumnModel().getColumnCount() > 0) {
            tblDrugs.getColumnModel().getColumn(0).setResizable(false);
            tblDrugs.getColumnModel().getColumn(1).setResizable(false);
            tblDrugs.getColumnModel().getColumn(2).setResizable(false);
            tblDrugs.getColumnModel().getColumn(3).setResizable(false);
        }

        lblSelectCountry8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSelectCountry8.setForeground(new java.awt.Color(0, 153, 51));
        lblSelectCountry8.setText("Total ");

        lblTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(0, 153, 51));

        btnCalculateTotal.setBackground(new java.awt.Color(255, 255, 255));
        btnCalculateTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCalculateTotal.setForeground(new java.awt.Color(0, 153, 0));
        btnCalculateTotal.setText("Calculate Total");
        btnCalculateTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateTotalActionPerformed(evt);
            }
        });

        txtQuantity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(lblSelectCountry6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(cmbDrugList, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblSelectCountry8)
                                    .addComponent(lblSelectCountry7))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(82, 82, 82)
                                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(btnCalculateTotal))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addComponent(btnAddPharmaceuticalCompany)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblName1)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectCountry6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDrugList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblSelectCountry7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCalculateTotal)
                                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblSelectCountry8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(232, 232, 232)
                                .addComponent(btnAddPharmaceuticalCompany))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPharmaceuticalCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPharmaceuticalCompanyActionPerformed
        // TODO add your handling code here:
        MedicineOrderRequest medicineOrderRequest = new MedicineOrderRequest();
        int selectedRow = tblDrugs.getSelectedRow();
        Medicine medicine = null;
        
        if(selectedRow > -1)
        {
            medicine = (Medicine) tblDrugs.getValueAt(selectedRow, 0);
        }
        
        medicineOrderRequest.setManufacturer(medicine.getManufacturer());
        medicineOrderRequest.setMedicine(medicine);
        medicineOrderRequest.setMessage("Request for Medicines");
        medicineOrderRequest.setQuantity(Integer.parseInt(txtQuantity.getText()));
        medicineOrderRequest.setSender(userAccount);
        medicineOrderRequest.setTotalCost(Float.parseFloat(lblTotal.getText()));
        medicineOrderRequest.setStatus("Sent for Approval");
        
        userAccount.getWorkQueue().getWorkRequestList().add(medicineOrderRequest);
        
        medicine.getManufacturer().getWorkQueue().getWorkRequestList().add(medicineOrderRequest);
        

    }//GEN-LAST:event_btnAddPharmaceuticalCompanyActionPerformed

    private void cmbDrugListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDrugListActionPerformed
        // TODO add your handling code here:.
        CountryEnterprise countryEnterprise;
        StateEnterprise stateEnterprise;
        CityEnterprise cityEnterprise;
        PharmaceuticalCompanyEnterprise pharmaceuticalCompanyEnterprise;
        ManufacturingOrganization manufacturingOrganization, manuOrg;
        DefaultTableModel dtm = (DefaultTableModel) tblDrugs.getModel();
        dtm.setRowCount(0);
        
        for (Enterprise country : internationalNetwork.getEnterpriseDirectory().getEnterpriseList()) {
            if (country.getClass() == CountryEnterprise.class) {
                countryEnterprise = (CountryEnterprise) country;
                
                for (Enterprise state : countryEnterprise.getCountryNetwork().getEnterpriseDirectory().getEnterpriseList()) {
                    if (state.getClass() == StateEnterprise.class) {
                        stateEnterprise = (StateEnterprise) state;
                        
                        for (Enterprise city : stateEnterprise.getStateNetwork().getEnterpriseDirectory().getEnterpriseList()) {
                            if (city.getClass() == CityEnterprise.class) {
                                cityEnterprise = (CityEnterprise) city;
                                
                                for (Enterprise pharma : cityEnterprise.getCityNetwork().getEnterpriseDirectory().getEnterpriseList()) {
                                    if (pharma.getClass() == PharmaceuticalCompanyEnterprise.class) {
                                        pharmaceuticalCompanyEnterprise = (PharmaceuticalCompanyEnterprise) pharma;
                                        
                                        for (Organization org : pharmaceuticalCompanyEnterprise.getOrganizationDirectory().getOrganizationList()) {
                                            if (org.getClass() == ManufacturingOrganization.class) {
                                                manufacturingOrganization = (ManufacturingOrganization) org;
                                                
                                                for (Medicine medicine : manufacturingOrganization.getMedicineList()) {
                                                    if (medicine.getDrug() == (Drug) cmbDrugList.getSelectedItem())
                                                    {
                                                        System.out.println("PRinting from purchase new drugs" + medicine.getManufacturer());
                                                         manuOrg = medicine.getManufacturer();
                                                        Object[] row = new Object[4];
                                                        row[0] = medicine;
                                                        row[1] = manuOrg;
                                                        row[2] = medicine.getQuantity();
                                                        row[3] = medicine.getPrice();
                                                        dtm.addRow(row);
                                                     }
                                                }
                                            }
                                        }
                                    }
                                }
                                
                            }
                        }
                    }
                    
                }
            }
        }

    }//GEN-LAST:event_cmbDrugListActionPerformed

    private void btnCalculateTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateTotalActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDrugs.getSelectedRow();
        Medicine medicine = null;
        
        if(selectedRow > -1)
        {
            medicine = (Medicine) tblDrugs.getValueAt(selectedRow, 0);
            int quantity = Integer.parseInt(txtQuantity.getText());
            if(medicine.getQuantity() >=  quantity)
            {
                lblTotal.setText(Float.toString(quantity*medicine.getPrice()));
            }
        }
    }//GEN-LAST:event_btnCalculateTotalActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPharmaceuticalCompany;
    private javax.swing.JButton btnCalculateTotal;
    private javax.swing.JComboBox cmbDrugList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblSelectCountry6;
    private javax.swing.JLabel lblSelectCountry7;
    private javax.swing.JLabel lblSelectCountry8;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblDrugs;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    private void populateDrugCombo() {
        cmbDrugList.removeAllItems();
        CountryEnterprise countryEnterprise;
        StateEnterprise stateEnterprise;
        CityEnterprise cityEnterprise;
        PharmaceuticalCompanyEnterprise pharmaceuticalCompanyEnterprise;
        ManufacturingOrganization manufacturingOrganization;
        
        for (Enterprise country : internationalNetwork.getEnterpriseDirectory().getEnterpriseList()) {
            if (country.getClass() == CountryEnterprise.class) {
                countryEnterprise = (CountryEnterprise) country;
                
                for (Enterprise state : countryEnterprise.getCountryNetwork().getEnterpriseDirectory().getEnterpriseList()) {
                    if (state.getClass() == StateEnterprise.class) {
                        stateEnterprise = (StateEnterprise) state;
                        
                        for (Enterprise city : stateEnterprise.getStateNetwork().getEnterpriseDirectory().getEnterpriseList()) {
                            if (city.getClass() == CityEnterprise.class) {
                                cityEnterprise = (CityEnterprise) city;
                                
                                for (Enterprise pharma : cityEnterprise.getCityNetwork().getEnterpriseDirectory().getEnterpriseList()) {
                                    if (pharma.getClass() == PharmaceuticalCompanyEnterprise.class) {
                                        pharmaceuticalCompanyEnterprise = (PharmaceuticalCompanyEnterprise) pharma;

//                                        for(Organization org: pharmaceuticalCompanyEnterprise.getOrganizationDirectory().getOrganizationList())
//                                        {
//                                            if(org.getClass() == ManufacturingOrganization.class)
//                                            {
//                                                manufacturingOrganization = (ManufacturingOrganization) org;
//                                                
//                                                for(Medicine medicine: manufacturingOrganization.getMedicineList())
//                                                {
//                                                    
//                                                }
                                        System.out.println("Printing from Purchase new drugs");
                                        System.out.println("Drug list length: " + pharmaceuticalCompanyEnterprise.getDrugList().size());
                                        for (Drug drug : pharmaceuticalCompanyEnterprise.getDrugList()) {
                                            cmbDrugList.addItem(drug);
                                        }
                                    }
                                }
                            }
                            
                        }
                    }
                }
                
            }
        }
    }
}

