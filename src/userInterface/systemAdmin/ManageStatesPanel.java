/*
 * Copyright (C) 2014 Abhishek
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package userInterface.systemAdmin;

import baseClasses.enterprise.CityEnterprise;
import baseClasses.enterprise.CountryEnterprise;
import baseClasses.enterprise.Enterprise;
import baseClasses.enterprise.StateEnterprise;
import baseClasses.network.Network;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class ManageStatesPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageStatesPanel
     */
    Network internationalNetwork;
    
    public ManageStatesPanel(Network internationalNetwork) {
        initComponents();
        this.internationalNetwork = internationalNetwork;
        populateCountries();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblSelectCountry = new javax.swing.JLabel();
        lblName2 = new javax.swing.JLabel();
        cmbCountryList = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStateList = new javax.swing.JTable();
        txtName = new javax.swing.JTextField();
        btnRenameState = new javax.swing.JButton();
        btnAddNewState = new javax.swing.JButton();
        btnDeleteState = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1591, 820));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/baseClasses/healtech logo.PNG"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1134, 692, -1, -1));

        lblSelectCountry.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSelectCountry.setForeground(new java.awt.Color(0, 153, 51));
        lblSelectCountry.setText("Select Country:");
        add(lblSelectCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 170, -1, -1));

        lblName2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblName2.setForeground(new java.awt.Color(0, 153, 51));
        lblName2.setText("Manage States");
        add(lblName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(454, 50, -1, -1));

        cmbCountryList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbCountryList.setForeground(new java.awt.Color(0, 204, 51));
        cmbCountryList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCountryListActionPerformed(evt);
            }
        });
        add(cmbCountryList, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 183, -1));

        tblStateList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblStateList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "State"
            }
        ));
        jScrollPane1.setViewportView(tblStateList);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 220, 362, 542));

        txtName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(898, 221, 261, -1));

        btnRenameState.setBackground(new java.awt.Color(255, 255, 255));
        btnRenameState.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnRenameState.setForeground(new java.awt.Color(0, 153, 0));
        btnRenameState.setText("Rename State");
        btnRenameState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRenameStateActionPerformed(evt);
            }
        });
        add(btnRenameState, new org.netbeans.lib.awtextra.AbsoluteConstraints(538, 220, 261, -1));

        btnAddNewState.setBackground(new java.awt.Color(255, 255, 255));
        btnAddNewState.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAddNewState.setForeground(new java.awt.Color(0, 153, 0));
        btnAddNewState.setText("Add New State");
        btnAddNewState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewStateActionPerformed(evt);
            }
        });
        add(btnAddNewState, new org.netbeans.lib.awtextra.AbsoluteConstraints(898, 322, 261, -1));

        btnDeleteState.setBackground(new java.awt.Color(255, 255, 255));
        btnDeleteState.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDeleteState.setForeground(new java.awt.Color(0, 153, 0));
        btnDeleteState.setText("Delete State");
        btnDeleteState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteStateActionPerformed(evt);
            }
        });
        add(btnDeleteState, new org.netbeans.lib.awtextra.AbsoluteConstraints(538, 322, 261, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCountryListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCountryListActionPerformed
        // TODO add your handling code here:
        populateStates((CountryEnterprise)cmbCountryList.getSelectedItem());
    }//GEN-LAST:event_cmbCountryListActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnRenameStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRenameStateActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblStateList.getSelectedRow();
        StateEnterprise stateEnterprise = (StateEnterprise)tblStateList.getValueAt(selectedRow, 0);
        
        String newStateName = txtName.getText();
        
        stateEnterprise.setName(newStateName);
    }//GEN-LAST:event_btnRenameStateActionPerformed

    private void btnAddNewStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewStateActionPerformed
        // TODO add your handling code here:
        String newStateName = txtName.getText();
        CountryEnterprise countryEnterprise = (CountryEnterprise) cmbCountryList.getSelectedItem();
       //countryEnterprise.getCountryNetwork().getEnterpriseDirectory().getEnterpriseList().add(new StateEnterprise(newStateName));
        StateEnterprise stateEnterprise =(StateEnterprise) countryEnterprise.getCountryNetwork().getEnterpriseDirectory().
                createAndAddEnterprise(txtName.getText(), Enterprise.EnterpriseType.State,null,null,null,null,null);
        //System.out.println();
        //countryEnterprise.getCountryNetwork().getEnterpriseDirectory().createAndAddEnterprise
        populateStates(countryEnterprise);
    }//GEN-LAST:event_btnAddNewStateActionPerformed

    private void btnDeleteStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteStateActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblStateList.getSelectedRow();
        StateEnterprise stateEnterprise = (StateEnterprise)tblStateList.getValueAt(selectedRow, 0);
        CountryEnterprise countryEnterprise = (CountryEnterprise) cmbCountryList.getSelectedItem();
        countryEnterprise.getCountryNetwork().getEnterpriseDirectory().getEnterpriseList().remove(stateEnterprise);
    }//GEN-LAST:event_btnDeleteStateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewState;
    private javax.swing.JButton btnDeleteState;
    private javax.swing.JButton btnRenameState;
    private javax.swing.JComboBox cmbCountryList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblSelectCountry;
    private javax.swing.JTable tblStateList;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    private void populateStates(CountryEnterprise countryEnterprise)
    {
      
        StateEnterprise stateEnterprise;
        DefaultTableModel dtm = (DefaultTableModel) tblStateList.getModel();
        dtm.setRowCount(0);
        
        for(Enterprise state: countryEnterprise.getCountryNetwork().getEnterpriseDirectory().getEnterpriseList())
        {
            if(state.getClass() == StateEnterprise.class)
            {
                System.out.println("State added to table: " + state);
            Object[] row = new Object[1];
            row[0] = (StateEnterprise) state;
            
            dtm.addRow(row);
            }
            
            
        }
        
        
    }

    private void populateCountries()
    {
        cmbCountryList.removeAllItems();
        CountryEnterprise countryEnterprise;
        
        for(Enterprise country: internationalNetwork.getEnterpriseDirectory().getEnterpriseList())
        {
            cmbCountryList.addItem((CountryEnterprise) country);
        }
        
    }
}
