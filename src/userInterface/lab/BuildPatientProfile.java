/*
 * Copyright (C) 2014 Abhishek
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package userInterface.lab;

import baseClasses.allergy.Allergy;
import baseClasses.allergy.MedicinalAllergy;
import baseClasses.patient.Patient;
import baseClasses.patient.PatientProfile;
import baseClasses.vitalSigns.VitalSign;
import baseClasses.vitalSigns.VitalSignHistory;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import workQueue.LabWorkRequest;

/**
 *
 * @author Abhishek
 */
public class BuildPatientProfile extends javax.swing.JPanel {

    /**
     * Creates new form BuildPatientProfile
     */
    private Patient patient;
    private PatientProfile patientProfile = null;
    private VitalSign vitalSign = null;
    private VitalSignHistory vitalSignHistory = null;
    private JPanel userProcessContainer;
    private LabWorkRequest labWorkRequest;
    
    public BuildPatientProfile(Patient patient, JPanel userProcessContainer, LabWorkRequest labWorkRequest) {
        initComponents();
        this.patient = patient;
        vitalSign = new VitalSign();
        vitalSignHistory = new VitalSignHistory();
        this.userProcessContainer = userProcessContainer;
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Date date = new Date();
        txtTimestamp.setText(dateFormat.format(date));
        patientProfile = new PatientProfile();
        this.labWorkRequest = labWorkRequest;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAllergies = new javax.swing.JTable();
        lblName5 = new javax.swing.JLabel();
        txtAllergies = new javax.swing.JTextField();
        btnAddAllergies = new javax.swing.JButton();
        btnMedicinalAllergies = new javax.swing.JButton();
        txtMedicinalAllergies = new javax.swing.JTextField();
        lblName6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMedicinalAllergies = new javax.swing.JTable();
        lblHeartRate = new javax.swing.JLabel();
        txtHeartRate = new javax.swing.JTextField();
        txtBloodPressure = new javax.swing.JTextField();
        lblBloodPressure = new javax.swing.JLabel();
        lblRespiratoryRate = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        lblTimestamp = new javax.swing.JLabel();
        txtTimestamp = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        txtRespRate = new javax.swing.JTextField();
        btnBuildPatientProfile = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        lblName1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblName1.setForeground(new java.awt.Color(0, 153, 51));
        lblName1.setText("Build Patient Profile");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/baseClasses/healtech logo.PNG"))); // NOI18N

        tblAllergies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Allergy"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAllergies);
        if (tblAllergies.getColumnModel().getColumnCount() > 0) {
            tblAllergies.getColumnModel().getColumn(0).setResizable(false);
        }

        lblName5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblName5.setForeground(new java.awt.Color(0, 153, 51));
        lblName5.setText("Allergy:");

        txtAllergies.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnAddAllergies.setBackground(new java.awt.Color(255, 255, 255));
        btnAddAllergies.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAddAllergies.setForeground(new java.awt.Color(0, 153, 0));
        btnAddAllergies.setText(">>");
        btnAddAllergies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAllergiesActionPerformed(evt);
            }
        });

        btnMedicinalAllergies.setBackground(new java.awt.Color(255, 255, 255));
        btnMedicinalAllergies.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnMedicinalAllergies.setForeground(new java.awt.Color(0, 153, 0));
        btnMedicinalAllergies.setText(">>");
        btnMedicinalAllergies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedicinalAllergiesActionPerformed(evt);
            }
        });

        txtMedicinalAllergies.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblName6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblName6.setForeground(new java.awt.Color(0, 153, 51));
        lblName6.setText("Medicinal Allergy");

        tblMedicinalAllergies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicinal Allergy"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblMedicinalAllergies);
        if (tblMedicinalAllergies.getColumnModel().getColumnCount() > 0) {
            tblMedicinalAllergies.getColumnModel().getColumn(0).setResizable(false);
        }

        lblHeartRate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblHeartRate.setText("HEART RATE");

        txtHeartRate.setToolTipText("");

        lblBloodPressure.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblBloodPressure.setText("BLOOD PRESSURE");

        lblRespiratoryRate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblRespiratoryRate.setText("RESPIRATORY RATE");

        lblWeight.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblWeight.setText("WEIGHT");

        lblTimestamp.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTimestamp.setText("TIMESTAMP");

        txtTimestamp.setEditable(false);

        txtRespRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRespRateActionPerformed(evt);
            }
        });

        btnBuildPatientProfile.setBackground(new java.awt.Color(255, 255, 255));
        btnBuildPatientProfile.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBuildPatientProfile.setForeground(new java.awt.Color(0, 153, 0));
        btnBuildPatientProfile.setText("Build Patient Profile");
        btnBuildPatientProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuildPatientProfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(1013, 1429, Short.MAX_VALUE)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblName6, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMedicinalAllergies, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(btnMedicinalAllergies)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblName5, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAllergies, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(btnAddAllergies)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblTimestamp)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTimestamp, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblHeartRate)
                                                .addComponent(lblBloodPressure))
                                            .addGap(288, 288, 288))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(lblWeight, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblRespiratoryRate, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtRespRate, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnBuildPatientProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(121, 121, 121)))))
                .addGap(264, 264, 264))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblName1)
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblName5)
                        .addGap(37, 37, 37)
                        .addComponent(txtAllergies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnAddAllergies))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblHeartRate)
                            .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBloodPressure))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRespRate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRespiratoryRate))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblWeight)
                            .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTimestamp, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTimestamp))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblName6)
                                .addGap(37, 37, 37)
                                .addComponent(txtMedicinalAllergies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(btnMedicinalAllergies))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuildPatientProfile)
                        .addGap(158, 158, 158)))
                .addComponent(jLabel1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddAllergiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAllergiesActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) tblAllergies.getModel();
        dtm.setRowCount(0);

        Object[] row = new Object[1];
        row[0] = txtAllergies.getText();
        dtm.addRow(row);

    }//GEN-LAST:event_btnAddAllergiesActionPerformed

    private void btnMedicinalAllergiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedicinalAllergiesActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) tblMedicinalAllergies.getModel();
        dtm.setRowCount(0);

        Object[] row = new Object[1];
        row[0] = txtMedicinalAllergies.getText();
        dtm.addRow(row);
    }//GEN-LAST:event_btnMedicinalAllergiesActionPerformed

    private void txtRespRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRespRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRespRateActionPerformed

    private void btnBuildPatientProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuildPatientProfileActionPerformed
        // TODO add your handling code here:
        try {
            if (!(txtHeartRate.getText().isEmpty())) {
                if ((Integer.parseInt(txtHeartRate.getText())) > 999) {
                    JOptionPane.showMessageDialog(this, "Invalid value entered for Heart Rate", "Error", JOptionPane.ERROR_MESSAGE);
                } else if (!(txtBloodPressure.getText().isEmpty())) {
                    if ((Float.parseFloat(txtBloodPressure.getText())) >= 1000.00) {
                        JOptionPane.showMessageDialog(this, "Invalid value entered for Blood Pressure", "Error", JOptionPane.ERROR_MESSAGE);
                    } else if (!(txtRespRate.getText().isEmpty())) {
                        if ((Integer.parseInt(txtRespRate.getText())) > 999) {
                            JOptionPane.showMessageDialog(this, "Invalid value entered for Respiratory Rate", "Error", JOptionPane.ERROR_MESSAGE);
                        } else if (!(txtWeight.getText().isEmpty())) {
                            if ((Float.parseFloat(txtWeight.getText())) >= 1000.00) {
                                JOptionPane.showMessageDialog(this, "Invalid value entered for Weight", "Error", JOptionPane.ERROR_MESSAGE);
                            } else {
                                vitalSign.setRespiratoryRate(Integer.parseInt(txtRespRate.getText()));
                            }
                            vitalSign.setHeartRate(Integer.parseInt(txtHeartRate.getText()));
                            vitalSign.setBloodPressure(Float.parseFloat(txtBloodPressure.getText()));
                            vitalSign.setWeight(Float.parseFloat(txtWeight.getText()));
                            vitalSignHistory.addVitalSign(vitalSign);
                            //ViewPatientPanel viewPatientPanel = new ViewPatientPanel(patient);
                            vitalSign.setTimestamp(txtTimestamp.getText());
                            //mainFrame.updateFrame(viewPatientPanel, patientList);

                        } else {
                            JOptionPane.showMessageDialog(this, "Please enter a value for Weight", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Please enter a value for Respiratory Rate", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Please enter a value for Blood Pressure", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please enter a value for Heart Rate", "Error", JOptionPane.ERROR_MESSAGE);
            }
            System.out.println("patient profile" + patientProfile);
            patientProfile.setLastVitalSigns(vitalSign);
            patientProfile.getVitalSignHistory().add(vitalSign);
            System.out.println("patient profile" + patientProfile);
            int allergyRowCount = tblAllergies.getRowCount();
            int medAllergyRowCount = tblMedicinalAllergies.getRowCount();
            ArrayList<Allergy> allergyList = new ArrayList();
            ArrayList<MedicinalAllergy> medAllergyList = new ArrayList();

            for (int i = 0; i < allergyRowCount; i++) {
                allergyList.add(new Allergy((String) tblAllergies.getValueAt(i, 0)));
            }

            for (int i = 0; i < medAllergyRowCount; i++) {
                allergyList.add(new MedicinalAllergy((String) tblMedicinalAllergies.getValueAt(i, 0)));
            }
            
            patientProfile.setAllergiesList(allergyList);
            patientProfile.setMedicinalAllergyList(medAllergyList);
            patientProfile.setAllergiesList(allergyList);
            patientProfile.setMedicinalAllergyList(medAllergyList);
            System.out.println("Printing from build patient profile" + patient);
            patient.setPatientProfile(patientProfile);
            
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.previous(userProcessContainer);

        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Please enter only numeric values", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        labWorkRequest.setPatient(patient);
        labWorkRequest.setStatus("Completed");
                

    }//GEN-LAST:event_btnBuildPatientProfileActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAllergies;
    private javax.swing.JButton btnBuildPatientProfile;
    private javax.swing.JButton btnMedicinalAllergies;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBloodPressure;
    private javax.swing.JLabel lblHeartRate;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblName5;
    private javax.swing.JLabel lblName6;
    private javax.swing.JLabel lblRespiratoryRate;
    private javax.swing.JLabel lblTimestamp;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JTable tblAllergies;
    private javax.swing.JTable tblMedicinalAllergies;
    private javax.swing.JTextField txtAllergies;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtMedicinalAllergies;
    private javax.swing.JTextField txtRespRate;
    private javax.swing.JTextField txtTimestamp;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
