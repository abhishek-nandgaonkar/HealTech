/*
 * Copyright (C) 2014 Abhishek
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package userInterface.manufacturer;

import baseClasses.Drug;
import baseClasses.enterprise.CountryEnterprise;
import baseClasses.enterprise.Enterprise;
import baseClasses.enterprise.FDAEnterprise;
import baseClasses.enterprise.PharmaceuticalCompanyEnterprise;
import baseClasses.manufacturer.Manufacturer;
import baseClasses.medicine.Medicine;
import baseClasses.network.Network;
import baseClasses.organization.ManufacturingOrganization;
import baseClasses.organization.Organization;
import baseClasses.userAccount.UserAccount;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import workQueue.DrugApprovalWorkRequest;
import workQueue.REMApprovalWorkRequest;

/**
 *
 * @author Abhishek
 */
public class ManufactureMedicines extends javax.swing.JPanel {

    /**
     * Creates new form DrugDetailsPanel
     */
    private Enterprise inEnterprise;
    PharmaceuticalCompanyEnterprise pharmaceuticalCompanyEnterprise;
    Network internationalNetwork;
    UserAccount userAccount;
    Organization inOrganization;
    private ManufacturingOrganization manufacturingOrganization;
    private CountryEnterprise countryEnterprise = null;
    
    
    public ManufactureMedicines(Network internationalNetwork, Enterprise inEnterprise, UserAccount userAccount, ManufacturingOrganization manufacturingOrganization) {
        initComponents();
        this.inEnterprise = inEnterprise;
        pharmaceuticalCompanyEnterprise = (PharmaceuticalCompanyEnterprise) inEnterprise;
        this.internationalNetwork = internationalNetwork;
        this.userAccount = userAccount;
        //this.inOrganization = inOrganization;
        this.manufacturingOrganization = manufacturingOrganization;
//        if(inOrganization.getClass() == ManufacturingOrganization.class)
//        {
//            manufacturingOrganization = (ManufacturingOrganization) inOrganization;
//        }
        System.out.println("Manufacturing organization chk: " + manufacturingOrganization);
        populateDrugTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDrugDetails = new javax.swing.JTable();
        lblName3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblName4 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnSendForREMApproval = new javax.swing.JButton();
        lblName5 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        taREMNotes = new javax.swing.JTextArea();
        lblName6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        lblName1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblName1.setForeground(new java.awt.Color(0, 153, 51));
        lblName1.setText("Manufacture Medicine ");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/baseClasses/healtech logo.PNG"))); // NOI18N

        tblDrugDetails.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblDrugDetails.setForeground(new java.awt.Color(0, 204, 51));
        tblDrugDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDrugDetails);
        if (tblDrugDetails.getColumnModel().getColumnCount() > 0) {
            tblDrugDetails.getColumnModel().getColumn(0).setResizable(false);
        }

        lblName3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblName3.setForeground(new java.awt.Color(0, 153, 51));
        lblName3.setText("Medicine Name");

        txtName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblName4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblName4.setForeground(new java.awt.Color(0, 153, 51));
        lblName4.setText("Quantity");

        txtQuantity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });

        btnSendForREMApproval.setBackground(new java.awt.Color(255, 255, 255));
        btnSendForREMApproval.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSendForREMApproval.setForeground(new java.awt.Color(0, 153, 0));
        btnSendForREMApproval.setText("Send for REM Approval");
        btnSendForREMApproval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendForREMApprovalActionPerformed(evt);
            }
        });

        lblName5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblName5.setForeground(new java.awt.Color(0, 153, 51));
        lblName5.setText("Price per unit");

        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        taREMNotes.setColumns(20);
        taREMNotes.setRows(5);
        jScrollPane2.setViewportView(taREMNotes);

        lblName6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblName6.setForeground(new java.awt.Color(0, 153, 51));
        lblName6.setText("REM Notes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(213, 1436, Short.MAX_VALUE)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(268, 268, 268)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName3)
                            .addComponent(lblName6)
                            .addComponent(lblName5)
                            .addComponent(lblName4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSendForREMApproval, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addComponent(txtPrice)
                            .addComponent(txtQuantity)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(507, 507, 507)
                        .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(289, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(lblName1)
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName3))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName4))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName5))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jScrollPane2)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(lblName6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(btnSendForREMApproval))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void btnSendForREMApprovalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendForREMApprovalActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDrugDetails.getSelectedRow();

        if (selectedRow > -1) {
            Medicine medicine = new Medicine();
            medicine.setName(txtName.getText());
            medicine.setDrug((Drug) tblDrugDetails.getValueAt(selectedRow, 0));
            Manufacturer manufacturer = (Manufacturer) userAccount.getPerson();
            medicine.setManufacturer(manufacturingOrganization);
            System.out.println("Printing from Manufacture Medicines: " + medicine.getManufacturer());
            medicine.setQuantity(Integer.parseInt(txtQuantity.getText()));
            medicine.setPrice(Integer.parseInt(txtPrice.getText()));
            medicine.setPharmaceuticalEnterprise(pharmaceuticalCompanyEnterprise);
//            manufacturingOrganization.getMedicineList().add(medicine);
//        }

        //Medicine medicine = new Medicine();
        medicine.setName(txtName.getText());
        DefaultTableModel dtm = (DefaultTableModel) tblDrugDetails.getModel();
        int rowcount = dtm.getRowCount();

//        for (int i = 0; i < rowcount; i++) {
//            medicine.addComponent((String)dtm.getValueAt(i, 0));
//        }
//
//        medicine.setApprovalStatus("Pending");

        //PharmaceuticalCompanyEnterprise pharmaceuticalCompanyEnterprise = (PharmaceuticalCompanyEnterprise) inEnterprise;
        //pharmaceuticalCompanyEnterprise.addDrug(medicine);
        REMApprovalWorkRequest medicineApprovalWorkRequest = new REMApprovalWorkRequest(medicine);
        medicineApprovalWorkRequest.setSender(userAccount);
        medicineApprovalWorkRequest.setMedicine(medicine);
        medicineApprovalWorkRequest.setMessage(taREMNotes.getText());
        
        medicineApprovalWorkRequest.setStatus("Sent For Approval");
        medicineApprovalWorkRequest.setRequestDate(new Date());
        
        System.out.println("Printing from Add new medicine Pharmaceutical Company enterprise" + pharmaceuticalCompanyEnterprise);
        System.out.println(pharmaceuticalCompanyEnterprise.getAddress());
        System.out.println(pharmaceuticalCompanyEnterprise.getAddress().getCountry());
        countryEnterprise = pharmaceuticalCompanyEnterprise.getAddress().getCountry();
        System.out.println(countryEnterprise);
        FDAEnterprise fdaEnterprise = null;
        String fdaName = countryEnterprise.getName() + "FDA";
        CountryEnterprise countryE, countryEnt = null;

        for (Enterprise country : internationalNetwork.getEnterpriseDirectory().getEnterpriseList()) {
            if (country.getClass() == CountryEnterprise.class) {
                countryE = (CountryEnterprise) country;

                if (countryE.getName().equals(countryEnterprise.getName())) {
                    countryEnt = countryE;

                    for (Enterprise fda : countryEnt.getCountryNetwork().getEnterpriseDirectory().getEnterpriseList()) {

                        if (fda.getClass() == FDAEnterprise.class) {

                            fdaEnterprise = (FDAEnterprise) fda;
                            System.out.println("FDAEnterprise found" + fdaEnterprise);
                            //if(fdaEnterprise.getName().equals(fdaName))
                            {
                                fda.getWorkQueue().getWorkRequestList().add(medicineApprovalWorkRequest);
                                userAccount.getWorkQueue().getWorkRequestList().add(medicineApprovalWorkRequest);
                                System.out.println("FDAEnterprise found" + fdaEnterprise);
                                System.out.println("work queue length" + fda.getWorkQueue().getWorkRequestList().size());
                            }

                        }
                    }

                }
            }
        }

        
        }
    }//GEN-LAST:event_btnSendForREMApprovalActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSendForREMApproval;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblName3;
    private javax.swing.JLabel lblName4;
    private javax.swing.JLabel lblName5;
    private javax.swing.JLabel lblName6;
    private javax.swing.JTextArea taREMNotes;
    private javax.swing.JTable tblDrugDetails;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    private void populateDrugTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblDrugDetails.getModel();
        dtm.setRowCount(0);

//        CountryEnterprise countryEnterprise;
//        StateEnterprise stateEnterprise;
//        CityEnterprise cityEnterprise;
//        PharmaceuticalCompanyEnterprise pharmaceuticalCompanyEnterprise;
//        for (Enterprise country : internationalNetwork.getEnterpriseDirectory().getEnterpriseList()) {
//            if (country.getClass() == CountryEnterprise.class) {
//                countryEnterprise = (CountryEnterprise) country;
//
//                for (Enterprise state : countryEnterprise.getCountryNetwork().getEnterpriseDirectory().getEnterpriseList()) {
//                    if (state.getClass() == StateEnterprise.class) {
//                        if (state.getClass() == StateEnterprise.class) {
//                            stateEnterprise = (StateEnterprise) state;
//
//                            for (Enterprise city : stateEnterprise.getStateNetwork().getEnterpriseDirectory().getEnterpriseList()) {
//                                if (city.getClass() == CityEnterprise.class) {
//                                    cityEnterprise = (CityEnterprise) city;
//
//                                    for (Enterprise pharma : cityEnterprise.getCityNetwork().getEnterpriseDirectory().getEnterpriseList()) {
//                                        if (pharma.getClass() == PharmaceuticalCompanyEnterprise.class) {
//                                            pharmaceuticalCompanyEnterprise = (PharmaceuticalCompanyEnterprise) pharma;
        for (Drug drug : pharmaceuticalCompanyEnterprise.getDrugList()) {
            Object[] row = new Object[1];
            row[0] = drug;

            dtm.addRow(row);
        }

    }
}
